import logging

from aiogram import Bot, Dispatcher, executor, types
from keyboards import *

BOT_TOKEN = 'YOUR TOKEN'

logging.basicConfig(level=logging.INFO)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

location = '–¢–∞—à–∫–µ–Ω—Ç'
find_check = False
location_check = False


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    global location
    global find_check
    btn = await start_keyboard(location)
    await message.answer('üíä –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞', reply_markup=btn)


@dp.message_handler(text='üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫')
async def find(message: types.Message):
    global find_check
    await message.answer('üíä –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ (–Ω–µ –º–µ–Ω–µ–µ 3 –±—É–∫–≤)')
    find_check = True
@dp.message_handler(text='üè†Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
async def main(message: types.Message):
    global find_check
    find_check = False
    btn = await start_keyboard(location)
    await message.answer('üíä –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞', reply_markup=btn)


@dp.message_handler(text='‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤')
async def main(message: types.Message):
    await message.answer('–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —á–µ—Ä–µ–∑ —ç—Ç–æ—Ç –±–æ—Ç –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–∏ –º–Ω–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. @osonaptekamurojatbot.')


@dp.message_handler(text='üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫')
async def main(message: types.Message):
    btn = await changeLang_keyboard()
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ üëá', reply_markup=btn)
@dp.message_handler(text='‚è™ –ù–∞–∑–∞–¥')
async def main(message: types.Message):
    btn = await start_keyboard(location)
    await message.answer('üíä –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞', reply_markup=btn)


@dp.message_handler(text_contains='üìç –ú–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: ')
async def main(message: types.Message):
    global location_check
    btn = await selectLocation_keyboard()
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥', reply_markup=btn)
    location_check = True


@dp.message_handler(text='–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è‚ùì')
async def main(message: types.Message):
    await message.answer_video(types.InputFile('use_bot.mp4'))

@dp.message_handler()
async def messages(message: types.Message):
    if find_check == True:
        btn = await find_keyboard()
        await message.answer('‚ùóÔ∏è–ü–æ —ç—Ç–æ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. üíä –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ (–Ω–µ –º–µ–Ω–µ–µ 3 –±—É–∫–≤)', reply_markup=btn)
    elif location_check == True:
        location = message.text
        btn = await start_keyboard(location)
        await message.answer('üíä –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞', reply_markup=btn)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
